searchState.loadedDescShard("substrait", 0, "Re-export the Substrait module of datafusion, note this is …\nType variation constants\nConvert Substrait AggregateFunction to DataFusion Expr\nConvert Substrait Plan to DataFusion LogicalPlan\nConvert Substrait Rel to DataFusion DataFrame\nConvert Substrait Rex to DataFusion Expr\nConvert Substrait Expressions to DataFusion Exprs\nConvert Substrait Sorts to DataFusion Exprs\nConvert Substrait FunctionArguments to DataFusion Exprs\nReturn Substrait scalar function with two arguments\nConvert DataFusion LogicalPlan to Substrait Plan\nConvert DataFusion LogicalPlan to Substrait Rel\nConvert DataFusion Expr to Substrait Rex\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSNAFU context selector for the <code>Error::ConvertDfSchema</code> …\nSNAFU context selector for the <code>Error::DFInternal</code> variant\nSNAFU context selector for the <code>Error::DecodeDfPlan</code> variant\nSNAFU context selector for the <code>Error::DecodeRel</code> variant\nSNAFU context selector for the <code>Error::EmptyExpr</code> variant\nSNAFU context selector for the <code>Error::EmptyPlan</code> variant\nSNAFU context selector for the <code>Error::EncodeDfPlan</code> variant\nSNAFU context selector for the <code>Error::EncodeRel</code> variant\nContains the error value\nSNAFU context selector for the <code>Error::Internal</code> variant\nSNAFU context selector for the <code>Error::InvalidParameters</code> …\nSNAFU context selector for the <code>Error::MissingField</code> variant\nContains the success value\nSNAFU context selector for the <code>Error::ResolveTable</code> variant\nSNAFU context selector for the <code>Error::SchemaNotMatch</code> …\nSNAFU context selector for the <code>Error::UnknownPlan</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::UnsupportedExpr</code> …\nSNAFU context selector for the <code>Error::UnsupportedPlan</code> …\nSNAFU context selector for the …\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeserialize user defined logical plan node (…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialize this node to a byte array. This serialization …")